name: GLB File Update Automation

on:
  push:
    branches:
      - 'glb_update'  # Updated branch name
    paths:
      - 'assets/models/*.glb'

permissions:
  contents: write  # Grant GITHUB_TOKEN write permissions

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 2  # Fetch the last two commits

      - name: Parse FTP Credentials
        id: ftp_creds
        shell: bash
        run: |
          echo '${{ secrets.SIMPLE_FTP }}' > ftp_creds.json
          server=$(jq -r '.[0].host' ftp_creds.json)
          username=$(jq -r '.[0].username' ftp_creds.json)
          password=$(jq -r '.[0].password' ftp_creds.json)
          echo "server=$server" >> $GITHUB_OUTPUT
          echo "username=$username" >> $GITHUB_OUTPUT
          echo "password=$password" >> $GITHUB_OUTPUT

      - name: Get Updated GLB Files
        id: get_glb_files
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- assets/models/*.glb > updated_glb_files.txt
          UPDATED_GLB_FILE=$(cat updated_glb_files.txt | head -n 1)
          echo "Updated GLB file: $UPDATED_GLB_FILE"
          echo "updated_glb_file=$UPDATED_GLB_FILE" >> $GITHUB_OUTPUT

      - name: Update Main HTML File
        if: steps.get_glb_files.outputs.updated_glb_file != ''
        run: |
          MAIN_HTML_FILE="AframeTest.html"  # Update with the correct path if necessary
          GLB_FILENAME=$(basename "${{ steps.get_glb_files.outputs.updated_glb_file }}")
          echo "Updating HTML file to use GLB file: $GLB_FILENAME"
          # Update the gltf-model attribute in the HTML file
          sed -i 's|gltf-model="[^"]*"|gltf-model="assets/models/'"$GLB_FILENAME"'"|g' "$MAIN_HTML_FILE"
          # Show the updated line for verification
          grep 'gltf-model' "$MAIN_HTML_FILE"

      - name: Commit and Push Changes
        if: steps.get_glb_files.outputs.updated_glb_file != ''
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Update main HTML file to reference new GLB model'
          branch: glb_update  # Updated branch name
          file_pattern: AframeTest.html
          # No need to specify 'token'; the action uses GITHUB_TOKEN by default

      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@4.3.1
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftp
          port: ${{ secrets.FTP_PORT }}
          local-dir: assets/models  # Directory in your repository to upload
          server-dir: ${{ secrets.FTP_PATH }}  # Remote directory on your FTP server
          security: loose  # Set to 'loose' or 'strict' as appropriate
